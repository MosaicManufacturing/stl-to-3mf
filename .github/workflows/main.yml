name: Create Release of Library

on:
  push:
    branches: ['main']
  workflow_dispatch:

jobs:
  licensebot:
    name: Licensebot Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/license-check

  build:
    name: Compile
    runs-on: ubuntu-latest
    needs: ['licensebot']
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build
      - uses: ./.github/actions/build
        with:
          os: windows
          build-suffix: .exe
      - uses: ./.github/actions/build
        with:
          os: darwin
          build-suffix: -darwin

  deploy:
    name: Upload binary
    environment: production
    concurrency: deploy_main
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    needs: ['build']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: stl-to-3mf
      - uses: actions/download-artifact@v4
        with:
          name: stl-to-3mf.exe
      - uses: actions/download-artifact@v4
        with:
          name: stl-to-3mf-darwin
      - name: Get Version
        id: get-version
        run: |
          echo "version=$(cat version.txt | tr -d '\n')" >> $GITHUB_OUTPUT
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{secrets.AWS_ROLE}}
          aws-region: ${{secrets.AWS_REGION}}
      - name: Upload binaries to S3 they do not exist
        env: 
          S3_PATH: s3://${{secrets.S3_BUCKET}}/stl-to-3mf/${{steps.get-version.outputs.version}}
        run: |
          EXISTS=true
          aws s3 ls ${{env.S3_PATH}}/linux/amd64/stl-to-3mf || aws s3 ls ${{env.S3_PATH}}/windows/amd64/stl-to-3mf.exe || aws s3 ls ${{env.S3_PATH}}/darwin/amd64/stl-to-3mf || EXISTS=false
          if [ $EXISTS == true ]; then
            echo "Library version already exists."
            exit 1
          fi
          echo "Existing version has not been published"
          aws s3 cp /linux/amd64/stl-to-3mf
          aws s3 cp ./stl-to-3mf.exe ${{env.S3_PATH}}/windows/amd64/stl-to-3mf.exe
          aws s3 cp ./stl-to-3mf-darwin ${{env.S3_PATH}}/darwin/amd64/stl-to-3mf
          aws s3 cp ./licenses.json ${{env.S3_PATH}}/licenses.json
